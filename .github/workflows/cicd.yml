name: CI/CD Pipeline

on:
  push:
    branches:
      - master # Déclenche l'action sur les push vers la branche master
  pull_request:
    branches:
      - master # Déclenche l'action lors des PR vers la branche master

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # Job pour installer les dépendances, construire, tester l'application et déployer
  build:
    runs-on: ubuntu-latest
    steps:
      # Étape 1 : Checkout du code source
      - name: Checkout repository
        uses: actions/checkout@v4

      # Étape 2 : Configurer Node.js pour le backend
      - name: Set up Node.js for backend
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      # Étape 3 : Installer les dépendances du backend
      - name: Install backend dependencies
        run: |
          cd backend
          npm install

      # Étape 4 : Installer les dépendances du frontend
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      # Étape 5 : Exécuter les tests du backend
      - name: Run backend tests
        run: |
          cd backend
          npm test

      # Étape 7 : Build du frontend (React/TypeScript)
      - name: Build frontend
        run: |
          cd frontend
          npm run build

      # Étape 8 : Build du backend si nécessaire
      - name: Build backend (si nécessaire)
        run: |
          cd backend
          # Il n'est pas nécessaire de "builder" le backend en JavaScript
          # Si vous avez des scripts de migration ou des tâches spécifiques à faire, vous pouvez les ajouter ici

      # Génération d'un artefact
      - name: generate GitHub Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: build
          path: ./frontend/dist
  # Job pour déployer l'application sur le serveur
  deploy:
    runs-on: ubuntu-latest
    needs: build # Ce job dépend de l'étape de build et de test réussie

    steps:
      # Étape 1 : Checkout du code source
      - name: Checkout repository
        uses: actions/checkout@v4

      # Étape 2 : Se connecter au serveur via SSH et déployer l'application
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.
        with:
          host: ${{ secrets.HOST }} # L'adresse de votre serveur
          username: ${{ secrets.SSH_USERNAME }} # Utilisateur SSH pour votre serveur
          key: ${{ secrets.SSH_PRIVATE_KEY }} # Clé privée SSH pour la connexion
          port: 22 # Port SSH
          script: |
            cd . # Chemin vers le dossier du projet sur votre serveur
            git pull origin master  # Récupérer les dernières modifications
            cd backend
            npm install  # Installer les dépendances du backend
            pm2 restart backend  # Redémarrer le backend avec PM2
            cd ../frontend
            npm install  # Installer les dépendances du frontend
            npm run build  # Construire le frontend
            pm2 restart frontend  # Redémarrer le frontend avec PM2
